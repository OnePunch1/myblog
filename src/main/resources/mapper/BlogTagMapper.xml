<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.he.myblog.dao.BlogTagMapper">
    <resultMap id="BaseResultMap" type="com.he.myblog.entity.BlogTag">
        <id column="tag_id" jdbcType="INTEGER" property="tagId"/>
        <result column="tag_name" jdbcType="VARCHAR" property="tagName"/>
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <resultMap id="BaseCountResultMap" type="com.he.myblog.entity.BlogTagCount">
        <id column="tag_id" jdbcType="INTEGER" property="tagId"/>
        <result column="tag_count" jdbcType="INTEGER" property="tagCount"/>
        <result column="tag_name" jdbcType="VARCHAR" property="tagName"/>
    </resultMap>
    <sql id="Base_Column_List">
    tag_id, tag_name, is_deleted, create_time
  </sql>
    <select id="findTagList" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from my_blog_db.tb_blog_tag
        where is_deleted=0
        order by tag_id desc
        <if test="limit!=null and start!=null">
            limit #{start},#{limit}
        </if>
    </select>
    <select id="getTagCount" resultMap="BaseCountResultMap">
        SELECT t_r.*,t.tag_name FROM
        (SELECT r.tag_id,r.tag_count FROM
         (SELECT tag_id ,COUNT(*) AS tag_count FROM
	      (SELECT tr.tag_id FROM my_blog_db.tb_blog_tag_relation tr LEFT JOIN my_blog_db.tb_blog b ON tr.blog_id = b.blog_id WHERE b.is_deleted=0)
	        trb GROUP BY tag_id)
				r ORDER BY tag_count DESC LIMIT 20 ) AS t_r LEFT JOIN my_blog_db.tb_blog_tag t ON t_r.tag_id = t.tag_id WHERE t.is_deleted=0
     </select>
    <select id="getTotalTags" parameterType="Map" resultType="int">
    select count(*)  from my_blog_db.tb_blog_tag
    where is_deleted=0
  </select>

    <select id="selectTagByName" parameterType="string" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List"/>
      from my_blog_db.tb_blog_tag
      where tag_name=#{tagName}
    </select>

    <update id="deleteBatch">
        update my_blog_db.tb_blog_tag
        set is_deleted=1
        where tag_id in
        <foreach  item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <insert id="batchInsertBlogTag" useGeneratedKeys="true" keyProperty="tagId" parameterType="list">
        insert into my_blog_db.tb_blog_tag (tag_name)
        values
        <foreach collection="list" separator="," item="item">
            (#{item.tagName})
        </foreach>
    </insert>
    <insert id="insertTagSelective" parameterType="com.he.myblog.entity.BlogTag">
        insert into my_blog_db.tb_blog_tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tagId!=null">
                tag_id,
            </if>
            <if test="tagName!=null">
                tag_name,
            </if>
            <if test="isDeleted!=null">
                is_deleted,
            </if>
            <if test="createTime!=null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tagId!=null">
                #{tagId},
            </if>
            <if test="tagName!=null">
                #{tagName}
            </if>
            <if test="isDeleted!=null">
                #{isDeleted},
            </if>
            <if test="createTime!=null">
                #{createTime},
            </if>
        </trim>
    </insert>
    
</mapper>